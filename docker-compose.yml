services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: loads_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_PUBLIC_URL: postgresql://postgres:postgres@db:5432/loads_db
      API_KEY: ${API_KEY}
      PORT: 3000
      NODE_ENV: production
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx tsx src/seed.ts &&
        node dist/index.js
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '5173:3000'
    depends_on:
      - api
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://api:3000
      - VITE_API_KEY=${API_KEY}

volumes:
  postgres_data:
